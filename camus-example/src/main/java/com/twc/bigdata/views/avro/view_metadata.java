/**
 * Autogenerated by Avro
 * 
 * DO NOT EDIT DIRECTLY
 */
package com.twc.bigdata.views.avro;  
@SuppressWarnings("all")
public class view_metadata extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"view_metadata\",\"namespace\":\"com.twc.bigdata.views.avro\",\"fields\":[{\"name\":\"anomalies\",\"type\":[\"null\",{\"type\":\"array\",\"items\":\"string\"}],\"default\":null}]}");
  @Deprecated public java.util.List<java.lang.CharSequence> anomalies;
  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call. 
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return anomalies;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }
  // Used by DatumReader.  Applications should not call. 
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: anomalies = (java.util.List<java.lang.CharSequence>)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'anomalies' field.
   */
  public java.util.List<java.lang.CharSequence> getAnomalies() {
    return anomalies;
  }

  /**
   * Sets the value of the 'anomalies' field.
   * @param value the value to set.
   */
  public void setAnomalies(java.util.List<java.lang.CharSequence> value) {
    this.anomalies = value;
  }

  /** Creates a new view_metadata RecordBuilder */
  public static com.twc.bigdata.views.avro.view_metadata.Builder newBuilder() {
    return new com.twc.bigdata.views.avro.view_metadata.Builder();
  }
  
  /** Creates a new view_metadata RecordBuilder by copying an existing Builder */
  public static com.twc.bigdata.views.avro.view_metadata.Builder newBuilder(com.twc.bigdata.views.avro.view_metadata.Builder other) {
    return new com.twc.bigdata.views.avro.view_metadata.Builder(other);
  }
  
  /** Creates a new view_metadata RecordBuilder by copying an existing view_metadata instance */
  public static com.twc.bigdata.views.avro.view_metadata.Builder newBuilder(com.twc.bigdata.views.avro.view_metadata other) {
    return new com.twc.bigdata.views.avro.view_metadata.Builder(other);
  }
  
  /**
   * RecordBuilder for view_metadata instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<view_metadata>
    implements org.apache.avro.data.RecordBuilder<view_metadata> {

    private java.util.List<java.lang.CharSequence> anomalies;

    /** Creates a new Builder */
    private Builder() {
      super(com.twc.bigdata.views.avro.view_metadata.SCHEMA$);
    }
    
    /** Creates a Builder by copying an existing Builder */
    private Builder(com.twc.bigdata.views.avro.view_metadata.Builder other) {
      super(other);
    }
    
    /** Creates a Builder by copying an existing view_metadata instance */
    private Builder(com.twc.bigdata.views.avro.view_metadata other) {
            super(com.twc.bigdata.views.avro.view_metadata.SCHEMA$);
      if (isValidValue(fields()[0], other.anomalies)) {
        this.anomalies = (java.util.List<java.lang.CharSequence>) data().deepCopy(fields()[0].schema(), other.anomalies);
        fieldSetFlags()[0] = true;
      }
    }

    /** Gets the value of the 'anomalies' field */
    public java.util.List<java.lang.CharSequence> getAnomalies() {
      return anomalies;
    }
    
    /** Sets the value of the 'anomalies' field */
    public com.twc.bigdata.views.avro.view_metadata.Builder setAnomalies(java.util.List<java.lang.CharSequence> value) {
      validate(fields()[0], value);
      this.anomalies = value;
      fieldSetFlags()[0] = true;
      return this; 
    }
    
    /** Checks whether the 'anomalies' field has been set */
    public boolean hasAnomalies() {
      return fieldSetFlags()[0];
    }
    
    /** Clears the value of the 'anomalies' field */
    public com.twc.bigdata.views.avro.view_metadata.Builder clearAnomalies() {
      anomalies = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    @Override
    public view_metadata build() {
      try {
        view_metadata record = new view_metadata();
        record.anomalies = fieldSetFlags()[0] ? this.anomalies : (java.util.List<java.lang.CharSequence>) defaultValue(fields()[0]);
        return record;
      } catch (Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }
}
